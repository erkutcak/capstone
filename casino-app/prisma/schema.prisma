// schema.prisma

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id            Int    @id @default(autoincrement())
  username      String?   @unique
  first_name    String?
  last_name     String?
  profile_pic   String?
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  
  transactions  Transaction[]
  @@map(name: "users")

  wallet Wallet?
}

model Transaction {
  id            Int   @id @default(autoincrement())
  amount        Int?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  @@map(name: "transactions")

  user          User? @relation(fields: [userId], references: [id])
  userId        Int?

  wallet        Wallet? @relation(fields: [walletId], references: [id])
  walletId      Int?

  game          Game? @relation(fields: [gameId], references: [id])
  gameId        Int?
}

model Wallet {
  id            Int   @id @default(autoincrement())
  balance       Int?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  transactions  Transaction[]
  @@map(name: "wallets")

  user          User? @relation(fields: [userId], references: [id])
  userId        Int @unique
}

model Game {
  id            Int   @id @default(autoincrement())
  name          String?

  transactions  Transaction[]
  @@map(name: "games")
}
